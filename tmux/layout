#! /usr/bin/env bash

if [[ $1 == -@(h|-h)* ]]
then
cat << 'HELP'
Usage:
layout {host prefix} [range or number of hosts (default: 1-3)] OR
       host1 host2 ...
HELP
exit 0
fi

nb_sessions="$(tmux ls -F#S 2>/dev/null | wc -l)"

if (($# <= 1)) || { (($# == 2)) && [[ $2 == [0-9]* || $2 == [0-9]*-[0-9]* ]]; }
then
   if (($# == 0))
   then
      read -p 'Common host prefix: ' prefix
      read -p 'Range or number of hosts (ex: [1-]3): ' range
   else
      prefix="$1"
      range="${2:-1-3}"
   fi

   [[ $2 == [01] ]] && { echo 'Abort. Number > 1 expected' 1>&2; exit 1; }

   [[ $range != *-* ]] && range=1-"$range"

   range_start="${range%-*}"
   range_end="${range#*-}"

   nb_hosts="$((range_end - range_start + 1))"

   if ((nb_hosts < 2))
   then
      echo 'Invalid range. Number of hosts must be > 1' 1>&2; exit 2
   fi

   ((nb_sessions == 0)) && tmux new -s tiles -d

   tmux new-window -n "$prefix" "ssh ${prefix}$range_start"

   for ((i = range_start + 1; i < range_end + 1; i++))
   do
      tmux split-window -h "ssh ${prefix}$i"
      ((i < range_start + 3)) && continue
      tmux select-layout tiled
   done
else
   ((nb_sessions == 0)) && tmux new -s tiles -d

   tmux new-window -n 'multi' "ssh $1"

   j=2
   for h in "${@:2}"
   do
      tmux split-window -h "ssh $h"
      ((j++ < 4)) && continue
      tmux select-layout tiled
   done
fi

if { [[ $nb_hosts ]] && ((nb_hosts == 3)); } || { [[ ! $nb_hosts ]] && (($# == 3)); }
then
   tmux select-layout even-horizontal
fi

tmux select-pane -t 1
tmux set-window-option synchronize-panes on

if ((nb_sessions == 0))
then
   tmux kill-window -t1
   tmux attach -t tiles
fi
