# GNU Readline Library
# http://cnswww.cns.cwru.edu/php/chet/readline/rluserman.html
#
# Note: use ^x^r to re-read this file after modification

# Key bindings {{{1
# ------------

# <up> and <down>
"\e[A": history-search-backward
"\e[B": history-search-forward

# <Home> and <End>
"\e[1~": beginning-of-line
"\e[4~": end-of-line

# <Ctrl-Left> and <Ctrl-Right> (same as Alt-b/f)
"\e[1;5D": backward-word
"\e[1;5C": forward-word

# ^d (instead of the default 'delete char before cursor')
"\C-d": kill-whole-line

# Macros {{{1
# ------

$if Bash

"\C-xa": "awk '/\e / {print $}' \e3\C-b"
"\C-xA": "\"${[@]}\"\e5\C-b"
"\C-xc": " | cut -d -f\e2\eb\C-f"
"\C-xC": " | sort | uniq -c | sort -rn"
"\C-xd": "date -d@"
"\C-xD": "date -d'' +%s\e2\eb\e2\C-f"
"\C-x@": "xclip <<< mitkofr@yahoo.fr\C-M"
"\C-xi": "ed -s \e  <<< $'H\\n0i\\n\\n.\\nwq'\e2\eb\C-b"
"\C-xe": "ed -s \e  <<< $'H\\n\\nwq'\eb\C-b"
"\C-xE": "sed '' \e2\C-b"
"\C-xh": "\eb\ed\C-y --help || \C-y -h || \C-y help\C-M"
"\C-xH": " | groff -man -Tascii | less\C-M"
"\C-xm": "parallel mv -- {} {.}.\e  ::: *."
# "\C-xm": "find . -name '*.\e ' -print0 | parallel -0 mv -- {} {.}."
# "\C-xm": "for f in *\e ; do mv -- \"$f\" \"${f%.*}\".; done\eb\e2\C-b"
"\C-xM": "find . -type f -iname '*\e ' -print0 | while IFS= read -rd ''; do mv -- \"$REPLY\" \"${REPLY%.*}\". ; done\eb\e3\C-b"
"\C-xr": "while IFS= read -r; do echo \"${REPLY}\"; done < "
"\C-xR": "IFS=\e  read -ra  <<< \"$\"\eb\e3\C-f"
"\C-xt": " | column -t"
"\C-x/": "find . -iname '*' -print\eb\e3\C-b"
"\C-x?": "find . -type f -exec bash -c '-- \"$1\"' _ {} \\;\e2\eb\e3\C-f"
"\C-xf": "for i in \e ; do  \"$i\"; done\e2\eb\e3\C-b"
"\C-xF": "for ((i = 0; i < \e ; i++)); do  \"$i\"; done\e2\eb\e3\C-b"
"\C-xn": "(shopt -s nullglob; unset latest; for file in *; do [[ $file -nt $latest ]] && latest=\"$file\"; done; echo \"$latest\")\e9\eb\e2\C-b"
"\C-xo": "openssl x509\e  -in  -noout -text\e2\eb\e2\C-b"
"\C-xO": "(shopt -s nullglob; unset oldest; for file in *; do [[ $file -ot $oldest || ! $oldest ]] && oldest=\"$file\"; done; echo \"$oldest\")\e10\eb\e2\C-b"
"\C-xp": "printf '%s\\n' "
"\C-xP": "\"$(type -P )\"\e2\C-b"
"\C-xs": "awk '{sum += $1} END {print sum}' "
"\C-xS": "systemctl status"
"\C-xv": "cat /etc/*release | uniq\C-M"
"\C-xV": "\"${}\"\e2\C-b"
"\C-xu": "until \e ; do ; done\eb\e2\C-b"
"\C-xw": "while \e ; do ; done\eb\e2\C-b"
"\C-xW": " >&2"
"\C-xy": "parallel -X cp -a {} \e  ::: *."
"\C-x#": "\"${#}\"\e3\C-b"
"\C-x%": "\"${%}\"\e3\C-b"
"\C-x:": "\"${:}\"\e3\C-b"
"\C-xx": " && echo 'This is a test'"
"\C-x`": "\"$()\"\e2\C-b"
"\C-xb": "{,.bak}"
"\C-xB": "\"$(())\"\e3\C-b"
"\C-x+": "command vim -nNX -u NONE -c '|wq' \eb\C-b"
"\C-x<": "<()\C-b"
"\C-x[": "[[  ]]\e3\C-b"
"\C-x]": "[[  ]]\e3\C-b"
"\C-x1": "192.168.0.1"
"\C-x2": "192.168.0.2"
"\C-x3": "192.168.0.3"
"\C-x4": "192.168.0.4"
"\C-x5": "192.168.0.5"
"\C-x6": "192.168.0.6"
"\C-x7": "192.168.0.7"
"\C-x8": "192.168.0.8"
"\C-x9": "(())\e2\C-b"
"\C-x0": "(())\e2\C-b"
"\C-x,": "{,}\e2\C-b"
"\C-x-": "{1\e ..}\C-b"
"\C-x>": "> 2>&1\e2\eb\C-b"
"\C-x\\": "$''\C-b"
"\C-x'": "$''\C-b"
"\C-x=": "command bc <<< 'scale=20; '\C-b"
"\C-x*": "(shopt -s nullglob dotglob; shopt -u failglob; files=(*); echo There are \"${#files[@]}\" files)"
"\C-x_": "/dev/null"
"\C-xq": "\eb\"\ef\""
"\C-x ": "IFS=\e ;  \"$*\"; unset IFS\e3\eb\ef\e3\C-f"
"\C-x.": "sudo !!\C-M"
"\C-x|": "ssh -fNL \e :: "

$endif

# Variable settings {{{1
# -----------------

set bell-style none
set echo-control-characters off

# link@, dir/...
set visible-stats on

# Don't show hidden files (unless .<tab>)
set match-hidden-files off

# Ignore case + treat - and _ as equivalent
set completion-ignore-case on
set completion-map-case on

# Display all possible completions right away
set show-all-if-ambiguous on
set show-all-if-unmodified on

# no (y or n) + no less
set completion-query-items 200
set page-completions off

$include ~/.inputrc_after
