# GNU Readline Library
# http://cnswww.cns.cwru.edu/php/chet/readline/rluserman.html
#
# Note: use ^x^r to re-read this file after modification

## Key bindings {{{1

# <up> and <down> {{{2
"\e[A": history-search-backward
"\e[B": history-search-forward

# <Home> and <End> {{{2
"\e[1~": beginning-of-line
"\e[4~": end-of-line

# <Ctrl-Left> and <Ctrl-Right> (same as Alt-b/f) {{{2
"\e[1;5D": backward-word
"\e[1;5C": forward-word

# ^d (instead of the default 'delete char before cursor') {{{2
"\C-d": kill-whole-line

## Macros {{{1

$if Bash

# Array {{{2
"\C-x[": "\"${[@]}\"\e5\C-b"

# awk {{{2
"\C-xa": "awk '/\e / {print $}' \e3\C-b"
"\C-xA": "awk '{sum += $1} END {print sum}' "

# bc {{{2
"\C-x=": "command bc <<< 'scale=20; '\C-b"

# Braces {{{2
"\C-x]": "[[]]\e2\C-b"
"\C-xb": "(())\e2\C-b"
"\C-xB": "{}\C-b"

# Counting row occurrences in a stream {{{2
"\C-xc": " | sort | uniq -c | sort -rn"

# Date conversions {{{2
"\C-xd": "date -d@\e  # unix -> std\C-x\C-x"
"\C-xD": "date -d'\e ' +%s # std -> unix\C-x\C-x"

# Directory statistics {{{2
"\C-x*": "(shopt -s nullglob dotglob; shopt -u failglob; inodes=(*[^~]); echo There are \"${#inodes[@]}\" inodes)"
"\C-xn": "(shopt -s nullglob; unset latest; for file in *; do [[ $file -nt $latest ]] && latest=\"$file\"; done; echo \"$latest\")\e9\eb\e2\C-b"
"\C-xo": "(shopt -s nullglob; unset oldest; for file in *; do [[ $file -ot $oldest || ! $oldest ]] && oldest=\"$file\"; done; echo \"$oldest\")\e10\eb\e2\C-b"

# ed {{{2
"\C-xe": "ed -s \e  <<< $'H\\n\\nwq'\eb\C-b"
"\C-xE": "ed -s \e  <<< $'H\\n0i\\n\\n.\\nwq'\e2\eb\C-b"

# Email {{{2
"\C-x@": "xclip <<< mitkofr@yahoo.fr\C-M"

# File renaming (mv) {{{2
"\C-xm": "find . -maxdepth 1 -iname '*\e ' ! -path . -printf \"mv '%P' '%P'\\n\" | nvim -u ~/.vimrc -c\"Ta/'.\\{-}'/l1l0\" -c'se ft=sh' -\C-x\C-x"
"\C-xM": "parallel mv -- {} {.}.\e  ::: *."

# find {{{2
"\C-x/": "find . -iname '*' -print\eb\e3\C-b"

# GNU parallel {{{2
"\C-x\\": " | parallel -X \e  {} \C-x\C-x"

# groff {{{2
"\C-xg": " | groff -man -Tascii | less\C-M"

# IPs {{{2
"\C-x0": "127.0.0.1"
"\C-x1": "192.168.0.1"
"\C-x2": "192.168.0.2"
"\C-x3": "192.168.0.3"
"\C-x4": "192.168.0.4"
"\C-x5": "192.168.0.5"
"\C-x6": "192.168.0.6"
"\C-x7": "192.168.0.7"
"\C-x8": "192.168.0.8"
"\C-x9": "192.168.0.9"

# Loops {{{2
"\C-xf": "for i in \e ; do  \"$i\"; done\e2\eb\e3\C-b"
"\C-xF": "for ((i = 0; i < \e ; i++)); do  \"$i\"; done\e2\eb\e3\C-b"
"\C-xu": "until \e ; do ; done\eb\e2\C-b"
"\C-xw": "while \e ; do ; done\eb\e2\C-b"

# printf {{{2
"\C-xp": "printf '%s\\n' "

# Quotes (including back ticks) {{{2
"\C-xq": "\eb\"\ef\""
"\C-x`": "\"$()\"\e2\C-b"

# Ranges {{{2
"\C-x-": "{1\e ..}\C-b"
"\C-x.": "{1\e ..}\C-b"

# systemd {{{2
"\C-xs": "systemctl status"
"\C-xS": "systemctl \e start\C-x\C-x"

# Tabular output {{{2
"\C-x|": " | column -t"

# Tests {{{2
"\C-xt": " && echo 'This is a test'"
"\C-xT": "[[ -\e  ]] && echo 'This is a test'\C-x\C-x"

# /dev/null {{{2
"\C-x_": "/dev/null"

$endif

## Variable settings {{{1

set bell-style none
set echo-control-characters off

# link@, dir/... {{{2
set visible-stats on

# Don't show hidden files (unless .<tab>) {{{2
set match-hidden-files off

# Ignore case + treat - and _ as equivalent {{{2
set completion-ignore-case on
set completion-map-case on

# Display all possible completions right away {{{2
set show-all-if-ambiguous on
set show-all-if-unmodified on

# no (y or n) + no less {{{2
set completion-query-items 200
set page-completions off
# }}}2

$include ~/.inputrc_after
